# подключение модуля socket для получения ip-адреса машины, на которой интерпретатор Python в настоящее время выполняется
import socket
# подключение класса Flask из модуля flask
from flask import Flask

# создаётся объект класса Flask
app = Flask(__name__)

# вызывается метод route объекта app, в который передается адрес страницы и методы, возвращается функция декоратор
# в функцию декоратор передается ссылка на функцию see
# функция декоратор регестрирует функцию see как обработчик запросов по указанному адресу
@app.route('/see', methods=['POST'])
def see():
    # в ответ на POST-запрос возвращает строку
    # функция gethostbyname переводит имя хоста в формат адреса IPv4, возвращает строку
    # gethostname() возвращает строку, содержащую имя хоста машины, на которой интерпретатор Python в настоящее время выполняется
    return "Hello World " + socket.gethostbyname(socket.gethostname())

# вызывызавется метода run объекта app: запуск приложения в режиме debug
app.run(debug = True)

# Http поддерживает следующие методы запросов: OPTIONS, GET, HEAD, POST, PUT, PATCH, DELETE, TRACE и CONNECT
# Самые распространнённые: GET,POST, PUT, DELETE
# GET-запросы используются для запросов содержимого клиентом у сервера, они могут только извлекать данные
# POST-запросы используются для передачи данных от клиента к серверу
# PUT-запросы используются для загрузки содержимого запроса на указанный ресурс, заменяют все текущие представления ресурса данными запроса
# DELETE-запросы удаляют указанный ресурс